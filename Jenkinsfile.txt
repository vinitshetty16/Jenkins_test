pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                // Using Maven to build the code
                sh 'mvn clean package'
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('Code Analysis') {
            steps {
                sh 'sonar-scanner'
            }
        }
        
        stage('Security Scan') {
            steps {
                // Integrating a security scanning tool 
                sh 'dependency-check.sh'
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                sh 'deploy-staging.sh'
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging environment
                sh 'run-staging-tests.sh'
            }
        }
        
        stage('Deploy to Production') {
            steps {
                // Use a deployment tool or scripts to deploy to production
                sh 'deploy-production.sh'
            }
        }
    }
    
    post {
        success {
            // Send notification email with success status and logs as attachment
            emailext (
                subject: "Pipeline Successful",
                body: "Pipeline succeeded. Attached are the logs.",
                attachmentsPattern: '**/*.log',
                to: 'vkshetty@deakin.edu.au'
            )
        }
        failure {
            // Send notification email with failure status and logs as attachment
            emailext (
                subject: "Pipeline Failed",
                body: "Pipeline failed. Attached are the logs.",
                attachmentsPattern: '**/*.log',
                to: 'vkshetty@deakin.edu.au'
            )
        }
    }
}